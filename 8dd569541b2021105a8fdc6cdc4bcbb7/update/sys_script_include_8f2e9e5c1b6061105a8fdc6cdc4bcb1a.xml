<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>public</access>
        <active>true</active>
        <api_name>x_953551_edgescan.EdgescanVulnerabilityIntegration</api_name>
        <caller_access/>
        <client_callable>true</client_callable>
        <description/>
        <name>EdgescanVulnerabilityIntegration</name>
        <script><![CDATA[var EdgescanVulnerabilityIntegration = Class.create();
EdgescanVulnerabilityIntegration.prototype = Object.extendsObject(sn_vul.VulnerabilityIntegrationBase, {
	
	retrieveVulnerabilities: function() {
		var vulnerabilities = [];
		var importRecord = new GlideRecord('x_953551_edgescan_import_configuration');
		importRecord.query();
		while (importRecord.next()) {
			var credential = new sn_cc.StandardCredentialsProvider().getCredentialByID(importRecord.edgescan_credential.sys_id);
			var edgescanClient = new EdgescanClient(credential.getAttribute('authentication_key'));
			if (edgescanClient.validAuthenticationToken() && credential.getAttribute('active') == 'true') {
				vulnerabilities = vulnerabilities.concat(edgescanClient.vulnerabilities(importRecord.assets));
			} else {
				gs.error("Invalid/inactive edgescan authentication token: " + importRecord.edgescan_credential.name);
			}
		}
		return vulnerabilities;
	},
	
	retrieveDefinitions: function() {
		new EdgescanSeverityMapping().create();
		var credentialRecord = new GlideRecord('x_953551_edgescan_edgescan_credentials');
		credentialRecord.addQuery('active', 'true');
		credentialRecord.query();
		while (credentialRecord.next()) {
			var credential = new sn_cc.StandardCredentialsProvider().getCredentialByID(credentialRecord.sys_id);
			var edgescanClient = new EdgescanClient(credential.getAttribute('authentication_key'));
			if (edgescanClient.validAuthenticationToken()) {
				var definitions = edgescanClient.vulnerabilityDefinitions();
				return definitions;
			} else {
				gs.error("Invalid edgescan authentication token: " + credentialRecord.name);
			}
		}
		throw(new Error("Import unsuccessful: No valid, active edgescan authentication tokens"));
	},
	
	retrieveData: function() {
		var definitions = this.retrieveDefinitions();
		var vulnerabilities = this.retrieveVulnerabilities();
		var contents = {definitions: definitions, vulnerabilities: vulnerabilities};
		return {contents: contents, contentType: "application/json", extension: "json"};
	},

    type: 'EdgescanVulnerabilityIntegration'
});]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2023-01-18 14:59:21</sys_created_on>
        <sys_id>8f2e9e5c1b6061105a8fdc6cdc4bcb1a</sys_id>
        <sys_name>EdgescanVulnerabilityIntegration</sys_name>
        <sys_package display_value="Edgescan Vulnerability Response Integration" source="x_953551_edgescan">8dd569541b2021105a8fdc6cdc4bcbb7</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="Edgescan Vulnerability Response Integration">8dd569541b2021105a8fdc6cdc4bcbb7</sys_scope>
        <sys_update_name>sys_script_include_8f2e9e5c1b6061105a8fdc6cdc4bcb1a</sys_update_name>
    </sys_script_include>
</record_update>
