<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>true</active>
        <api_name>x_953551_edgescan.EdgescanClient</api_name>
        <caller_access/>
        <client_callable>false</client_callable>
        <description>Client for communication with Edgescan's API.</description>
        <name>EdgescanClient</name>
        <script><![CDATA[var EdgescanClient = Class.create();
EdgescanClient.prototype = {
    initialize: function(token) {
		this.token = token;
    },
	
	validAuthenticationToken: function() {
		var request = new sn_ws.RESTMessageV2();
		request.setEndpoint('https://live.edgescan.com/api/v1/feed.json?limit=1');
		request.setHttpMethod('GET');
		request.setRequestHeader("Accept", "application/json");
		request.setRequestHeader("X-API-TOKEN", this.token);
		
		var response = request.execute();
		if (response.getStatusCode() == 200) {
			return true;
		}
		return false;
	},
	
	vulnerabilityDefinitions: function() {
		var request = new sn_ws.RESTMessageV2();
		request.setEndpoint('https://live.edgescan.com/api/v1/definitions.json?detail_level=high&limit=150');
		request.setHttpMethod('GET');
		request.setRequestHeader("Accept", "application/json");
		request.setRequestHeader("X-API-TOKEN", this.token);
		
		var definitions = [];
		var response = request.execute();
		responseBody = response.getBody();
		if (response.getStatusCode() != 200) throw(new Error("Error fetching vulnerability definitions: " + responseBody));
		var parsed = JSON.parse(responseBody);
		definitions = definitions.concat(parsed.definitions);
		
		var offset = parsed.count;
		while (offset < parsed.total) {
			request.setEndpoint('https://live.edgescan.com/api/v1/definitions.json?detail_level=high&limit=150&offset=' + offset);
			response = request.execute();
			if (response.getStatusCode() != 200) throw(new Error("Error fetching vulnerability definitions: " + responseBody));
			responseBody = response.getBody();
			parsed = JSON.parse(responseBody);
			definitions = definitions.concat(parsed.definitions);
			offset += parsed.count;
		}
		return definitions;
	},

    type: 'EdgescanClient'
};]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2023-01-18 11:58:46</sys_created_on>
        <sys_id>723fe1541ba021105a8fdc6cdc4bcb4b</sys_id>
        <sys_name>EdgescanClient</sys_name>
        <sys_package display_value="Edgescan Vulnerability Response Integration" source="x_953551_edgescan">8dd569541b2021105a8fdc6cdc4bcbb7</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="Edgescan Vulnerability Response Integration">8dd569541b2021105a8fdc6cdc4bcbb7</sys_scope>
        <sys_update_name>sys_script_include_723fe1541ba021105a8fdc6cdc4bcb4b</sys_update_name>
    </sys_script_include>
</record_update>
